#include <opencv2\opencv.hpp>


const float mazi[] = {0.003462,0.005667,0.009097,0.012662,0.015124,0.017354,0.019880,0.022252,0.025344,0.027910,0.032448,0.035040,0.034353,0.040100,0.045721,0.047216,0.040044,0.034230,0.039801,0.041603,0.036937,0.031381,0.025820,0.030225,0.039779,0.044657,0.042068,0.037235,0.033261,0.031193,0.029876,0.028411,0.025295,0.021390,0.019159,0.015587,0.011718,0.008887,0.006146,0.003638,0.002208,0.000785,0.000149,0.005340,0.007661,0.010964,0.013708,0.015303,0.017405,0.020574,0.023738,0.028412,0.031803,0.036559,0.037493,0.035793,0.044400,0.045023,0.049164,0.051450,0.044661,0.035687,0.030000,0.026565,0.026431,0.032238,0.043916,0.049527,0.046886,0.039543,0.037970,0.038813,0.040242,0.040868,0.038572,0.033132,0.027466,0.023288,0.019146,0.015264,0.011502,0.007989,0.005018,0.003159,0.001629,0.000608,0.007285,0.010004,0.012979,0.014543,0.015606,0.018598,0.022598,0.028176,0.036104,0.041577,0.045959,0.044789,0.035742,0.033914,0.030830,0.033544,0.038366,0.033467,0.024889,0.016713,0.012753,0.018107,0.040890,0.065163,0.063830,0.049492,0.042967,0.050051,0.060602,0.065526,0.064720,0.055329,0.042737,0.033736,0.024499,0.019510,0.016431,0.012814,0.009526,0.007091,0.003804,0.002594,0.001261,0.008424,0.011014,0.013364,0.013777,0.014327,0.017170,0.022494,0.028643,0.039042,0.045720,0.048549,0.044199,0.033359,0.039253,0.040003,0.034173,0.026196,0.027120,0.047205,0.054797,0.047065,0.058252,0.096037,0.126448,0.120022,0.093654,0.068669,0.076219,0.095241,0.102166,0.096177,0.077958,0.056049,0.039580,0.026240,0.019259,0.016835,0.013679,0.011277,0.009862,0.005809,0.004071,0.002093,0.010404,0.013142,0.015379,0.016138,0.018773,0.023554,0.031329,0.034622,0.045054,0.048246,0.052485,0.050646,0.035780,0.041768,0.045152,0.052450,0.063676,0.072863,0.096977,0.120814,0.118706,0.118115,0.143085,0.163017,0.150094,0.127663,0.107504,0.107568,0.122181,0.128274,0.122631,0.102135,0.072192,0.048472,0.036200,0.026106,0.020810,0.019054,0.015510,0.011150,0.008627,0.005708,0.003257,0.011643,0.013867,0.015189,0.016369,0.021782,0.032122,0.032024,0.040860,0.046893,0.046523,0.048033,0.050798,0.050897,0.046720,0.058001,0.074042,0.099915,0.120091,0.149067,0.166967,0.161026,0.162414,0.175541,0.177531,0.156767,0.140596,0.116678,0.114711,0.124609,0.127674,0.121652,0.103280,0.075284,0.057652,0.046827,0.036313,0.029568,0.026124,0.021422,0.015982,0.011817,0.007819,0.004559,0.012189,0.014722,0.018546,0.022682,0.025682,0.030757,0.034021,0.042056,0.039083,0.046654,0.049224,0.040563,0.048478,0.063020,0.063928,0.083395,0.130239,0.150459,0.149420,0.160114,0.180384,0.199719,0.206611,0.168016,0.119142,0.099717,0.084418,0.089003,0.096074,0.099098,0.102526,0.091869,0.073563,0.064659,0.056448,0.045865,0.037196,0.031395,0.025235,0.019092,0.014142,0.009621,0.005730,0.012425,0.017109,0.022173,0.024782,0.024266,0.025339,0.033717,0.037924,0.029280,0.045160,0.062668,0.063879,0.087291,0.111181,0.108785,0.119364,0.161758,0.189722,0.191251,0.213056,0.251087,0.280909,0.268029,0.177664,0.093966,0.062541,0.063452,0.080007,0.082334,0.083135,0.094566,0.092379,0.083662,0.072029,0.063743,0.051394,0.040604,0.033016,0.026239,0.019462,0.015438,0.011140,0.007279,0.013667,0.018755,0.019102,0.014594,0.017224,0.028650,0.038744,0.039063,0.023707,0.013517,0.030630,0.068811,0.114079,0.142821,0.164196,0.164950,0.183052,0.238340,0.313342,0.353214,0.362578,0.376266,0.326555,0.201099,0.095421,0.063718,0.074000,0.098755,0.089235,0.083379,0.093992,0.091998,0.091013,0.084260,0.071123,0.054858,0.041953,0.034474,0.027532,0.020199,0.016968,0.013227,0.009172,0.013639,0.016581,0.017267,0.015251,0.017278,0.026174,0.040558,0.034904,0.022528,0.006504,0.022738,0.074375,0.104245,0.142071,0.177021,0.188253,0.210847,0.265975,0.338019,0.374205,0.383468,0.400776,0.360608,0.228436,0.117905,0.077637,0.087485,0.117703,0.103264,0.090203,0.098226,0.093347,0.094764,0.092736,0.073786,0.053409,0.041932,0.036881,0.030232,0.021977,0.018815,0.014471,0.010003,0.013096,0.014038,0.018776,0.024162,0.020406,0.020096,0.027758,0.020259,0.019434,0.029133,0.061875,0.118571,0.128834,0.145375,0.181128,0.217223,0.258302,0.290215,0.303402,0.322142,0.358827,0.417804,0.392211,0.249140,0.141573,0.090149,0.099849,0.133596,0.115365,0.102204,0.110392,0.106504,0.102587,0.094702,0.071771,0.051740,0.040709,0.037223,0.031792,0.023160,0.019169,0.014601,0.010376,0.009994,0.011522,0.015930,0.025946,0.019179,0.021217,0.010431,0.017766,0.022743,0.043844,0.068660,0.131390,0.148854,0.149410,0.191161,0.270752,0.319268,0.322704,0.313735,0.319165,0.345503,0.436580,0.386247,0.213696,0.123263,0.075180,0.087857,0.134777,0.124951,0.118232,0.110260,0.105220,0.091754,0.080380,0.059062,0.044784,0.034930,0.032102,0.029472,0.020411,0.017512,0.013711,0.010533,0.005259,0.007360,0.011892,0.020467,0.011656,0.012350,0.010612,0.043471,0.065928,0.084680,0.094529,0.144116,0.163575,0.177286,0.215388,0.330186,0.399941,0.389415,0.392975,0.401161,0.393873,0.436096,0.347146,0.173561,0.106949,0.077128,0.094749,0.157051,0.159719,0.149963,0.119847,0.100831,0.084993,0.052732,0.039365,0.032210,0.027886,0.026956,0.025240,0.017248,0.015515,0.011394,0.008788,0.003261,0.004515,0.007745,0.015819,0.008658,0.013354,0.048927,0.092216,0.117836,0.126964,0.121006,0.156507,0.166155,0.177150,0.217240,0.327092,0.404734,0.434127,0.460215,0.483593,0.463314,0.433890,0.287278,0.143293,0.126973,0.137535,0.155998,0.175607,0.136296,0.126449,0.109747,0.088868,0.064484,0.039069,0.030938,0.029970,0.027543,0.026913,0.024537,0.016565,0.014247,0.010623,0.007768,0.002820,0.001706,0.003020,0.016104,0.021358,0.040673,0.087493,0.119109,0.127874,0.134296,0.143075,0.188026,0.185469,0.188135,0.224433,0.264122,0.309615,0.407630,0.453500,0.458686,0.440937,0.381899,0.223224,0.120799,0.114390,0.123983,0.126662,0.128102,0.073847,0.070356,0.065020,0.056474,0.043699,0.031807,0.028742,0.030593,0.026077,0.024788,0.022014,0.013707,0.012247,0.009755,0.007957,0.001762,0.002725,0.002368,0.012509,0.022142,0.047746,0.091397,0.113678,0.111467,0.120670,0.149278,0.214041,0.217235,0.208081,0.223271,0.198899,0.206373,0.328709,0.385517,0.378303,0.369329,0.335903,0.215727,0.139655,0.101644,0.076469,0.058642,0.081543,0.062128,0.064005,0.048980,0.046294,0.052507,0.041799,0.039461,0.040082,0.034266,0.028569,0.025279,0.016488,0.009532,0.008048,0.006903,0.004064,0.003378,0.002480,0.019082,0.035125,0.067931,0.097444,0.120743,0.115415,0.115867,0.143140,0.214586,0.220270,0.201197,0.185086,0.154219,0.155154,0.247019,0.329488,0.333278,0.307786,0.274302,0.167363,0.124729,0.096733,0.067772,0.049361,0.055677,0.020935,0.034607,0.033339,0.033807,0.037414,0.039071,0.038176,0.040032,0.033425,0.028258,0.025331,0.016739,0.010261,0.007549,0.005452,0.007208,0.002635,0.008036,0.030806,0.054504,0.091380,0.109523,0.119351,0.117411,0.106374,0.127021,0.179168,0.173200,0.167888,0.151984,0.128078,0.114416,0.176168,0.277545,0.266930,0.219078,0.182763,0.137384,0.107495,0.083638,0.060439,0.041753,0.023267,0.012003,0.005158,0.006345,0.016730,0.020952,0.025206,0.027831,0.026581,0.021091,0.018537,0.017257,0.012635,0.008198,0.004111,0.002823,0.007165,0.002671,0.007839,0.025244,0.041380,0.068318,0.097939,0.098195,0.097270,0.086442,0.103582,0.127970,0.121613,0.143649,0.149089,0.136007,0.105669,0.119127,0.180108,0.162609,0.129840,0.086994,0.076284,0.052364,0.042826,0.033799,0.037038,0.021931,0.019390,0.012293,0.001917,0.002711,0.006582,0.003718,0.009778,0.011442,0.008995,0.010174,0.010861,0.008875,0.002556,0.001176,0.001383,0.008511,0.004013,0.002500,0.007147,0.008456,0.018904,0.058243,0.067173,0.059991,0.065241,0.083535,0.087306,0.098153,0.130426,0.140177,0.129315,0.098146,0.086136,0.106904,0.083457,0.061845,0.026045,0.024969,0.035013,0.020289,0.005602,0.009263,0.006102,0.015588,0.028502,0.024838,0.017270,0.016191,0.022051,0.026115,0.022618,0.014305,0.009955,0.006515,0.003737,0.001439,0.001115,0.001367,0.009913,0.007101,0.008819,0.007600,0.014060,0.009668,0.020941,0.036715,0.030917,0.048834,0.074601,0.071102,0.093860,0.106055,0.098751,0.076149,0.053258,0.065833,0.117035,0.072089,0.031219,0.017955,0.010795,0.037025,0.034603,0.022403,0.042204,0.026076,0.007252,0.025507,0.031524,0.025010,0.027907,0.034845,0.037160,0.032181,0.020586,0.012821,0.007090,0.003026,0.002410,0.001864,0.001319,0.010415,0.009581,0.012598,0.011815,0.015821,0.008665,0.011164,0.023788,0.017853,0.033382,0.056587,0.054467,0.066199,0.067973,0.061456,0.044631,0.032154,0.052688,0.100081,0.063584,0.031098,0.013440,0.006971,0.047065,0.043224,0.023518,0.011739,0.017069,0.013917,0.014899,0.012336,0.006674,0.005174,0.007606,0.014967,0.017826,0.015251,0.011878,0.008225,0.005382,0.002773,0.002512,0.000931,0.009976,0.010375,0.013787,0.011774,0.013921,0.004936,0.011303,0.013823,0.008784,0.009456,0.023048,0.028279,0.022516,0.030961,0.031532,0.026521,0.017660,0.024597,0.046049,0.019750,0.013703,0.005389,0.019002,0.055612,0.044497,0.018152,0.015355,0.022215,0.012944,0.009542,0.007931,0.011882,0.004946,0.013611,0.019057,0.018356,0.013446,0.008522,0.004802,0.002761,0.002624,0.002920,0.000870,0.008959,0.009128,0.012701,0.011374,0.014235,0.005882,0.005620,0.004446,0.006853,0.018279,0.007793,0.011809,0.007829,0.006894,0.005024,0.006003,0.015033,0.010357,0.009967,0.018916,0.018061,0.008884,0.013014,0.030925,0.033694,0.018798,0.015464,0.025668,0.015577,0.010276,0.008737,0.013588,0.005033,0.011617,0.015780,0.014883,0.010602,0.008039,0.005215,0.003108,0.003119,0.004090,0.001498,0.007603,0.009709,0.011561,0.011201,0.010989,0.010879,0.009820,0.012801,0.015704,0.019590,0.018803,0.013422,0.012015,0.007350,0.001087,0.023652,0.037782,0.039524,0.023342,0.019217,0.021041,0.010850,0.012079,0.011108,0.021532,0.018640,0.015763,0.025458,0.019176,0.007559,0.008350,0.008806,0.009769,0.006038,0.008644,0.007978,0.005830,0.005706,0.006474,0.004658,0.003648,0.002627,0.000875,0.004454,0.006755,0.007826,0.007508,0.007139,0.007322,0.012664,0.020266,0.026220,0.025592,0.017438,0.003512,0.003245,0.002179,0.002306,0.019778,0.029375,0.043836,0.037346,0.020108,0.017029,0.022824,0.028675,0.018863,0.015491,0.011214,0.026739,0.027467,0.012149,0.017062,0.016931,0.007890,0.006151,0.004480,0.006775,0.006916,0.004070,0.004920,0.005695,0.004050,0.003148,0.001763,0.000634,0.002901,0.005147,0.006671,0.006827,0.005686,0.005731,0.011618,0.014638,0.018082,0.016753,0.010381,0.001399,0.002975,0.001969,0.002134,0.007109,0.012376,0.024765,0.025469,0.008798,0.009523,0.023502,0.034823,0.025257,0.024301,0.008573,0.028491,0.034556,0.016948,0.010742,0.012240,0.007253,0.004802,0.002405,0.005392,0.005947,0.004205,0.003504,0.004001,0.002726,0.001403,0.000543,0.000273,0.002839,0.005356,0.006972,0.007381,0.007384,0.007844,0.009495,0.008523,0.007011,0.006073,0.007740,0.012261,0.017438,0.016626,0.015409,0.021289,0.018922,0.022334,0.019436,0.008060,0.008855,0.016113,0.026024,0.025337,0.031960,0.020942,0.019919,0.033527,0.025103,0.009301,0.006488,0.005419,0.006098,0.002379,0.004891,0.004485,0.001593,0.001320,0.001070,0.000393,0.001020,0.000957,0.000950,0.002158,0.003934,0.005363,0.005960,0.006561,0.007802,0.009441,0.009793,0.009908,0.010965,0.013142,0.017831,0.021244,0.022907,0.022325,0.025840,0.019304,0.015181,0.008248,0.004042,0.008591,0.021271,0.032922,0.029715,0.028667,0.014701,0.019900,0.030176,0.022612,0.007722,0.005847,0.005960,0.003862,0.001958,0.003754,0.003212,0.000868,0.000543,0.000678,0.001502,0.001904,0.001352,0.001135,0.001642,0.002631,0.003323,0.003896,0.004185,0.005704,0.009175,0.009642,0.010982,0.011391,0.011720,0.012884,0.014016,0.011582,0.010470,0.009075,0.002662,0.004495,0.004610,0.004417,0.011102,0.022210,0.031104,0.026056,0.022618,0.008160,0.010168,0.015897,0.010362,0.004790,0.005205,0.004692,0.003826,0.003078,0.001735,0.002702,0.001458,0.001012,0.000493,0.000288,0.000722,0.000843,0.000755,0.001669,0.002332,0.002664,0.002909,0.004096,0.005546,0.006551,0.004311,0.001753,0.001192,0.003076,0.010038,0.015786,0.014923,0.010913,0.008016,0.002350,0.002870,0.008365,0.011905,0.012437,0.014257,0.014045,0.015533,0.020396,0.017778,0.013063,0.004070,0.005343,0.003786,0.004091,0.004082,0.007326,0.005185,0.001494,0.002279,0.002131,0.002455,0.002248,0.001453,0.000364,0.000132,0.000346,0.001016,0.001468,0.001751,0.001753,0.002195,0.003176,0.004998,0.003715,0.005066,0.005589,0.006887,0.009923,0.007448,0.010312,0.005195,0.002509,0.002624,0.002510,0.004047,0.011152,0.015899,0.017516,0.020620,0.015206,0.010048,0.011071,0.012412,0.009026,0.009572,0.011025,0.007066,0.008922,0.009478,0.005875,0.003827,0.001075,0.001591,0.001896,0.001835,0.002130,0.000281,0.000096,0.000276,0.000809,0.001227,0.001652,0.002302,0.002832,0.002950,0.003686,0.003145,0.005704,0.006391,0.007728,0.008543,0.005663,0.005376,0.002055,0.001081,0.002099,0.002174,0.002229,0.009018,0.013771,0.015545,0.017277,0.013169,0.008964,0.009010,0.008952,0.004644,0.005226,0.004963,0.003059,0.003599,0.004302,0.003098,0.002175,0.000894,0.001017,0.001026,0.001192,0.001479,0.000747,0.000210,0.000109,0.000593,0.000751,0.001320,0.002320,0.002745,0.002755,0.002608,0.002128,0.004185,0.004907,0.005763,0.006394,0.003613,0.003585,0.001754,0.001856,0.003949,0.002926,0.004196,0.009325,0.011950,0.013175,0.015512,0.011420,0.007459,0.008257,0.007922,0.004301,0.005710,0.005213,0.002194,0.001786,0.001562,0.001342,0.001233,0.000928,0.000644,0.000408,0.000475,0.000854,0.000550,0.000118,0.000075,0.000316,0.000361,0.000831,0.001728,0.002320,0.002163,0.001753,0.001349,0.002024,0.001818,0.002873,0.004619,0.003022,0.003845,0.003226,0.005326,0.007294,0.007564,0.007763,0.010052,0.010104,0.011139,0.013110,0.009645,0.006294,0.006957,0.007312,0.005185,0.007808,0.007799,0.003126,0.001471,0.001883,0.001546,0.000902,0.000795,0.000724,0.000547,0.000127,0.000356,0.000212,0.000021,0.000027,0.000135,0.000213,0.000443,0.000988,0.001540,0.001833,0.002123,0.001351,0.001610,0.001339,0.001816,0.003191,0.002254,0.003859,0.003407,0.006796,0.010224,0.009750,0.009125,0.009272,0.008413,0.009272,0.010907,0.008017,0.005224,0.005764,0.005314,0.004270,0.007034,0.006934,0.002115,0.001444,0.002134,0.001427,0.000833,0.001030,0.001060,0.000883,0.000262,0.000088,0.000122,0.000006,0.000000};
int mw = 43;
int mh = 36;


unsigned char tintert(unsigned char a,unsigned char b,unsigned char c, unsigned char d, float pi, float pj)
{
	float e = a*(pi - floor(pi)) + b*(floor(pi)+1 - pi);
	float f = c*(pi - floor(pi)) + d*(floor(pi)+1 - pi);
	return e*(pj - floor(pj)) + f*(floor(pj)+1 - pj);
}

float tintert(float a,float b,float c,float d, float pi, float pj)
{
	float e = a*(pi - floor(pi)) + b*(floor(pi)+1 - pi);
	float f = c*(pi - floor(pi)) + d*(floor(pi)+1 - pi);
	return e*(pj - floor(pj)) + f*(floor(pj)+1 - pj);
}

unsigned char *change(unsigned char *img, int w, int h)
{
	int move1x = w/4;
	int move1y = h*2/3;
	int move2x = w*3/4;
	int move2y = h*2/3;
	int p1x = w*1.2/4;
	int p1y = h*1/2;

	unsigned char *nimg = new unsigned char[w*h*3];
	for(int i = 0; i < w; i++)
		for(int j = 0; j <h ;j++)
		{
			float distance21 = (i - move1x)*(i - move1x) + (j - move1y)*(j - move1y);
			float distance22 = (i - move2x)*(i - move2x) + (j - move2y)*(j - move2y);
			float pi,pj,per1,per2;
			per1 = exp(-float(distance21)/1000);
			per2 = exp(-float(distance22)/1000);
			pi = i + per1*(-30)+per2*30;
			pj = j + per1*(-10)+per2*10;

			pi = pi<w?pi:w;
			pi = pi>0?pi:0;
			pj = pj<h?pj:h;
			pj = pj>0?pj:0;
			
			float rpi = pi - p1x;
			float rpj = pj - p1y;
			rpi = rpi;
			rpj = rpj;
			

			float dx = floor(pi);
			float ux = ceil(pi);
			float dy = floor(pj);
			float uy = ceil(pj);

			float rdx = floor(rpi);
			float rux = ceil(rpi);
			float rdy = floor(rpj);
			float ruy = ceil(rpj);

			float aa,ab,ac,ad;

			if(rdx<0||rux>mw||rdy<0||ruy>mh)
			{
				aa = 0;
				ab = 0;
				ac = 0;
				ad = 0;
			}
			else
			{
				aa = mazi[mw*int(rdy)+int(rdx)];
				ab = mazi[mw*int(rdy)+int(rux)];
				ac = mazi[mw*int(ruy)+int(rdx)];
				ad = mazi[mw*int(ruy)+int(rux)];
			}

			unsigned char ra = img[w*3*int(dy)+int(dx)*3];
			unsigned char rb = img[w*3*int(dy)+int(ux)*3];
			unsigned char rc = img[w*3*int(uy)+int(dx)*3];
			unsigned char rd = img[w*3*int(uy)+int(ux)*3];

			unsigned char ga = img[w*3*int(dy)+int(dx)*3+1];
			unsigned char gb = img[w*3*int(dy)+int(ux)*3+1];
			unsigned char gc = img[w*3*int(uy)+int(dx)*3+1];
			unsigned char gd = img[w*3*int(uy)+int(ux)*3+1];

			unsigned char ba = img[w*3*int(dy)+int(dx)*3+2];
			unsigned char bb = img[w*3*int(dy)+int(ux)*3+2];
			unsigned char bc = img[w*3*int(uy)+int(dx)*3+2];
			unsigned char bd = img[w*3*int(uy)+int(ux)*3+2];

			float a = tintert(aa,ab,ac,ad,rpi,rpj);
			unsigned char b = tintert(ra,rb,rc,rd,pi,pj);
			unsigned char g = tintert(ga,gb,gc,gd,pi,pj);
			unsigned char r  = tintert(ba,bb,bc,bd,pi,pj);
			unsigned char min = r<g?r:g;
			min = min<b?min:b;
			r = (r-min)*0.7+min;
			a =1-a;
			r = r*a;
			g = g*a*a;
			b = b*a*a;
		//	g = r;

			nimg[w*3*j+i*3] = b;
			nimg[w*3*j+i*3+1] = g;
			nimg[w*3*j+i*3+2] = r;
		}
	return nimg;
}


int main(int)
{
	cv::Mat img = cv::imread("timg.jpg");
	cv::imshow("test",img);
	cv::waitKey(0);
	unsigned char * ig = change(img.data, img.cols, img.rows);
	cv::Mat result(img.rows,img.cols,CV_8UC3,ig);
	cv::imshow("result",result);
	cv::waitKey(0);
}